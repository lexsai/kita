
export class Screen {
  constructor(canvas)
  {
    this.canvas = canvas;
    this.ctx = canvas.getContext("2d");
    this.ctx.imageSmoothingEnabled = false;
    this.initInput();
    this.listeners = {};
  }
  
  initInput()
  {
    const keyDown = (e) => {
      this.keyEvent(e.key, 1.0);
    };
    
    const keyUp = (e) => {
      this.keyEvent(e.key, 0.0);
    };
    
    const mouseMove = (e) => {
      this.mouseMove(e.movementX, e.movementY);
    };
    
    document.addEventListener("pointerlockchange", (e) => {
      if (document.pointerLockElement == canvas
      || document.mozPointerLockElement == canvas) {
        document.addEventListener("mousemove", mouseMove);
        document.addEventListener("keydown", keyDown);
        document.addEventListener("keyup", keyUp);
      } else {
        document.removeEventListener("mousemove", mouseMove);
        document.removeEventListener("keydown", keyDown);
        document.removeEventListener("keyup", keyUp);
      }
    });
    
    canvas.addEventListener("click", function() {
      canvas.requestPointerLock();
    });
  }
  
  addEventListener(name, action)
  {
    
  }
  
  swap(bitmap)
  {
    this.ctx.drawImage(bitmap.canvas, 0, 0, this.canvas.width, this.canvas.height);
  }
}
